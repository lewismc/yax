<?xml version="1.0" encoding="UTF-8"?><yax:configuration xmlns:yax="http://www.opsdesign.de/yax/1.0">
<root name="yax.root">
<input port="in" sequence="no" yax:creator="implementation.yax.standard"/>
<output port="out" sequence="no" yax:creator="implementation.yax.standard">
<yax:connection port="out" yax:component="pipe1"/>
</output>
<pipeline name="pipe1">
<input port="in" sequence="no" yax:creator="implementation.xproc.standard">
<yax:connection port="in" yax:component="yax.root"/>
</input>
<output port="out" sequence="no" yax:creator="implementation.xproc.standard">
<yax:connection port="out" yax:component="trans3"/>
</output>
<step name="trans1">
<input port="in" sequence="no" yax:creator="implementation.xproc.standard">
<yax:connection port="in" yax:component="pipe1"/>
</input>
<output port="out" sequence="no" yax:creator="implementation.xproc.standard"/>
<input href="examples/transformation1.2.xsl" port="stylesheet" yax:creator="pipeline"/>
</step>
<step name="trans2">
<input port="in" sequence="no" yax:creator="implementation.xproc.standard">
<yax:connection port="out" yax:component="trans1"/>
</input>
<output port="out" sequence="no" yax:creator="implementation.xproc.standard"/>
<input href="examples/transformation2.xsl" port="stylesheet" yax:creator="pipeline"/>
</step>
<step name="trans3">
<input port="in" sequence="no" yax:creator="implementation.xproc.standard">
<yax:connection port="out" yax:component="trans2"/>
</input>
<output port="out" sequence="no" yax:creator="implementation.xproc.standard"/>
<input href="examples/transformation3.xsl" port="stylesheet" yax:creator="pipeline"/>
</step>
</pipeline>
</root>
<xproc:pipeline-library xmlns:xproc="http://www.w3.org/TR/2006/xproc/1.0" name="xproc.options">
<!--configuration description of library 'xproc.options' generated by Yax - Do not edit by hand-->
<xproc:declare-step-type type="Rename" yax:description="">
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:parameter name="select" required="yes" yax:values="{$xpathExpression}"/>
<xproc:parameter name="name" required="yes" yax:values="{$any}"/>
</xproc:declare-step-type>
</xproc:pipeline-library>
<xproc:pipeline-library xmlns:xproc="http://www.w3.org/TR/2006/xproc/1.0" name="xproc.standard">
<!--configuration description of library 'xproc.standard' generated by Yax - Do not edit by hand-->
<xproc:declare-step-type type="Identity" yax:description="">
<xproc:input port="in" select="" sequence="yes" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="yes" yax:bySourceRequired="no"/>
</xproc:declare-step-type>
<xproc:declare-step-type type="Load" yax:description="">
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:parameter name="href" required="yes" yax:values="{$href}"/>
</xproc:declare-step-type>
<xproc:declare-step-type type="Parse" yax:description="">
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
</xproc:declare-step-type>
<xproc:declare-step-type type="Serialize" yax:description="">
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
</xproc:declare-step-type>
<xproc:declare-step-type type="Store" yax:description="">
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:parameter name="href" required="yes" yax:values="{$href}"/>
</xproc:declare-step-type>
<xproc:declare-step-type type="Validate" yax:description="">
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
</xproc:declare-step-type>
<xproc:declare-step-type type="XInclude" yax:description="">
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
</xproc:declare-step-type>
<xproc:declare-step-type type="XSLT" yax:description="">
<xproc:input port="stylesheet" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
</xproc:declare-step-type>
<yax:declare-construct-type type="catch" yax:description="">
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:parameter name="description" required="no" yax:values="{$any}"/>
</yax:declare-construct-type>
<yax:declare-construct-type type="choose" yax:description="">
<xproc:input port="ref" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:parameter name="description" required="no" yax:values="{$any}"/>
</yax:declare-construct-type>
<yax:declare-construct-type type="group" yax:description="">
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:parameter name="description" required="no" yax:values="{$any}"/>
</yax:declare-construct-type>
<yax:declare-construct-type type="otherwise" yax:description="">
<xproc:input port="ref" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:parameter name="description" required="no" yax:values="{$any}"/>
</yax:declare-construct-type>
<yax:declare-construct-type type="pipeline" yax:description="">
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:parameter name="description" required="no" yax:values="{$any}"/>
</yax:declare-construct-type>
<yax:declare-construct-type type="try" yax:description="">
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:parameter name="description" required="no" yax:values="{$any}"/>
</yax:declare-construct-type>
<yax:declare-construct-type type="when" yax:description="">
<xproc:input port="ref" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:parameter name="test" required="yes" yax:values="{$xpathExpression}"/>
<xproc:parameter name="description" required="no" yax:values="{$any}"/>
</yax:declare-construct-type>
</xproc:pipeline-library>
<xproc:pipeline-library xmlns:xproc="http://www.w3.org/TR/2006/xproc/1.0" name="yax.standard">
<!--configuration description of library 'yax.standard' generated by Yax - Do not edit by hand-->
<xproc:declare-step-type type="IdentityOne" yax:description="">
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:parameter name="param1" required="yes" yax:values="{$any}"/>
<xproc:parameter name="param2" required="yes" yax:values="{$any}"/>
<xproc:parameter name="param3" required="yes" yax:values="{$any}"/>
</xproc:declare-step-type>
<xproc:declare-step-type type="Insert" yax:description="">
<xproc:input port="ref" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:parameter name="targetElement" required="yes" yax:values="{$xpathExpression}"/>
<xproc:parameter name="description" required="no" yax:values="{$any}"/>
<xproc:parameter name="targetMode" required="yes" yax:values="{before|after|in-top|in-bottom}"/>
</xproc:declare-step-type>
<yax:declare-construct-type type="root" yax:description="">
<xproc:input port="in" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:output port="out" select="" sequence="no" yax:bySourceRequired="no"/>
<xproc:parameter name="description" required="no" yax:values="{$any}"/>
</yax:declare-construct-type>
</xproc:pipeline-library>
</yax:configuration>
